// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.20.3
// source: example.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ExampleOrder_CreateOrder_FullMethodName       = "/ExampleOrder/CreateOrder"
	ExampleOrder_OrderList_FullMethodName         = "/ExampleOrder/OrderList"
	ExampleOrder_OrderDetail_FullMethodName       = "/ExampleOrder/OrderDetail"
	ExampleOrder_UpdateOrderStatus_FullMethodName = "/ExampleOrder/UpdateOrderStatus"
)

// ExampleOrderClient is the client API for ExampleOrder service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ExampleOrderClient interface {
	// 创建订单
	CreateOrder(ctx context.Context, in *ExampleOrderRequest, opts ...grpc.CallOption) (*ExampleOrderInfoResponse, error)
	// 订单列表
	OrderList(ctx context.Context, in *ExampleOrderFilterRequest, opts ...grpc.CallOption) (*ExampleOrderListResponse, error)
	// 订单详情
	OrderDetail(ctx context.Context, in *ExampleOrderRequest, opts ...grpc.CallOption) (*ExampleOrderInfoDetailResponse, error)
	// 修改订单状态
	UpdateOrderStatus(ctx context.Context, in *ExampleOrderStatus, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type exampleOrderClient struct {
	cc grpc.ClientConnInterface
}

func NewExampleOrderClient(cc grpc.ClientConnInterface) ExampleOrderClient {
	return &exampleOrderClient{cc}
}

func (c *exampleOrderClient) CreateOrder(ctx context.Context, in *ExampleOrderRequest, opts ...grpc.CallOption) (*ExampleOrderInfoResponse, error) {
	out := new(ExampleOrderInfoResponse)
	err := c.cc.Invoke(ctx, ExampleOrder_CreateOrder_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exampleOrderClient) OrderList(ctx context.Context, in *ExampleOrderFilterRequest, opts ...grpc.CallOption) (*ExampleOrderListResponse, error) {
	out := new(ExampleOrderListResponse)
	err := c.cc.Invoke(ctx, ExampleOrder_OrderList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exampleOrderClient) OrderDetail(ctx context.Context, in *ExampleOrderRequest, opts ...grpc.CallOption) (*ExampleOrderInfoDetailResponse, error) {
	out := new(ExampleOrderInfoDetailResponse)
	err := c.cc.Invoke(ctx, ExampleOrder_OrderDetail_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exampleOrderClient) UpdateOrderStatus(ctx context.Context, in *ExampleOrderStatus, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, ExampleOrder_UpdateOrderStatus_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExampleOrderServer is the server API for ExampleOrder service.
// All implementations must embed UnimplementedExampleOrderServer
// for forward compatibility
type ExampleOrderServer interface {
	// 创建订单
	CreateOrder(context.Context, *ExampleOrderRequest) (*ExampleOrderInfoResponse, error)
	// 订单列表
	OrderList(context.Context, *ExampleOrderFilterRequest) (*ExampleOrderListResponse, error)
	// 订单详情
	OrderDetail(context.Context, *ExampleOrderRequest) (*ExampleOrderInfoDetailResponse, error)
	// 修改订单状态
	UpdateOrderStatus(context.Context, *ExampleOrderStatus) (*emptypb.Empty, error)
	mustEmbedUnimplementedExampleOrderServer()
}

// UnimplementedExampleOrderServer must be embedded to have forward compatible implementations.
type UnimplementedExampleOrderServer struct {
}

func (UnimplementedExampleOrderServer) CreateOrder(context.Context, *ExampleOrderRequest) (*ExampleOrderInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrder not implemented")
}
func (UnimplementedExampleOrderServer) OrderList(context.Context, *ExampleOrderFilterRequest) (*ExampleOrderListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrderList not implemented")
}
func (UnimplementedExampleOrderServer) OrderDetail(context.Context, *ExampleOrderRequest) (*ExampleOrderInfoDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrderDetail not implemented")
}
func (UnimplementedExampleOrderServer) UpdateOrderStatus(context.Context, *ExampleOrderStatus) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrderStatus not implemented")
}
func (UnimplementedExampleOrderServer) mustEmbedUnimplementedExampleOrderServer() {}

// UnsafeExampleOrderServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ExampleOrderServer will
// result in compilation errors.
type UnsafeExampleOrderServer interface {
	mustEmbedUnimplementedExampleOrderServer()
}

func RegisterExampleOrderServer(s grpc.ServiceRegistrar, srv ExampleOrderServer) {
	s.RegisterService(&ExampleOrder_ServiceDesc, srv)
}

func _ExampleOrder_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExampleOrderServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ExampleOrder_CreateOrder_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExampleOrderServer).CreateOrder(ctx, req.(*ExampleOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExampleOrder_OrderList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleOrderFilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExampleOrderServer).OrderList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ExampleOrder_OrderList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExampleOrderServer).OrderList(ctx, req.(*ExampleOrderFilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExampleOrder_OrderDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExampleOrderServer).OrderDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ExampleOrder_OrderDetail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExampleOrderServer).OrderDetail(ctx, req.(*ExampleOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExampleOrder_UpdateOrderStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleOrderStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExampleOrderServer).UpdateOrderStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ExampleOrder_UpdateOrderStatus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExampleOrderServer).UpdateOrderStatus(ctx, req.(*ExampleOrderStatus))
	}
	return interceptor(ctx, in, info, handler)
}

// ExampleOrder_ServiceDesc is the grpc.ServiceDesc for ExampleOrder service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ExampleOrder_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ExampleOrder",
	HandlerType: (*ExampleOrderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOrder",
			Handler:    _ExampleOrder_CreateOrder_Handler,
		},
		{
			MethodName: "OrderList",
			Handler:    _ExampleOrder_OrderList_Handler,
		},
		{
			MethodName: "OrderDetail",
			Handler:    _ExampleOrder_OrderDetail_Handler,
		},
		{
			MethodName: "UpdateOrderStatus",
			Handler:    _ExampleOrder_UpdateOrderStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "example.proto",
}
